# -*- coding: utf-8 -*-
"""Exploding Ball Colab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zL6_yA4ePMbzYyh-9ldvL-PVEIdccBYt
"""

# Exploding Ball Animation in Google Colab

import matplotlib.pyplot as plt
import matplotlib.animation as animation
import numpy as np

# Set up the figure
fig, ax = plt.subplots()
ax.set_xlim(-10, 10)
ax.set_ylim(-10, 10)
ax.set_aspect('equal')
ax.axis('off')

# Create initial ball (central explosion point)
ball, = ax.plot([], [], 'ro', markersize=10)
particles = []

# Create 20 particles with random directions and speeds
num_particles = 20
angles = np.linspace(0, 2*np.pi, num_particles, endpoint=False)
speeds = np.random.uniform(0.5, 2.0, num_particles)
dx = np.cos(angles) * speeds
dy = np.sin(angles) * speeds
positions = np.zeros((num_particles, 2))

for _ in range(num_particles):
    p, = ax.plot([], [], 'bo')
    particles.append(p)

# Animation function
def animate(frame):
    global positions
    if frame == 0:
        ball.set_data([0], [0])  # Show initial explosion center
    else:
        ball.set_data([], [])  # Hide center ball after first frame

    positions[:, 0] += dx
    positions[:, 1] += dy

    for i, p in enumerate(particles):
        p.set_data([positions[i, 0]], [positions[i, 1]])  # Corrected to use lists

    return [ball] + particles

# Create animation
ani = animation.FuncAnimation(fig, animate, frames=30, interval=100, blit=True)

# Display the animation
from IPython.display import HTML
HTML(ani.to_jshtml())